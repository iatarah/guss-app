swagger: '2.0'
info:
  version: 1.0.0
  title: GUSS Account API
host: 'localhost:8080'
basePath: /rest/ugguss/api/v1
schemes:
  - http
paths:
  '/profiles/{memberId}':
    get:
      tags:
       - /accounts
      summary: Returns response object for basic member profile info
      description: ''
      operationId: getMember
      produces:
        - application/json
      parameters:
        - name: memberId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/UserProfile'
    post:
      tags:
      - /accounts
      summary: Update User Profile Info
      description: ''
      operationId: updateMember
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            type: object
            items:
              $ref: '#/definitions/UserProfile'
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            items:
              $ref: '#/definitions/UserProfile'
  /userType:
    get:
      tags:
        -/userTypes
      summary: Return list of User Types in the application
      description: ''
      operationId: getAllUserTypes
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operations
          schema:
            type: array
            items:
              $ref: '#/definitions/UserType'
  /people:
    get:
      tags:
        - /samples
      summary: Returns the entire collection of in-memory Person objects
      description: ''
      operationId: getAllPeople
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Person'
    post:
      tags:
        - /samples
      summary: Creates a new Person object based on suppplied JSON and returns the created object including ID
      description: ''
      operationId: addPerson
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/Person'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Person'
  '/people/{id}':
    get:
      tags:
        - /samples
      summary: Returns a single Person object based on suppplied ID
      description: ''
      operationId: getPerson
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Person'
    put:
      tags:
        - /samples
      summary: Modifies an existing Person object based on suppplied JSON and uses the ID parameter to identify the target person
      description: ''
      operationId: updatePerson
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/Person'
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Person'
    delete:
      tags:
        - /samples
      summary: Removes a single Person object based on suppplied ID
      description: ''
      operationId: deletePerson
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Person'
  /users/current:
    get:
      tags:
        - /samples
      summary: Returns a simplified JSON representation of Liferay User object for logged in user (or default user if not logged in)
      description: ''
      operationId: getCurrentUser
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LiferayUser'
definitions:
  UserProfile:
    type: object
    properties:
      emailAddress:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      middleName:
        type: string
      dob:
        type: string
        format: date
      policyNumber:
        type: integer
        format: int32
  UserType:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
  LiferayUser:
    type: object
    properties:
      emailAddress:
        type: string
      screenName:
        type: string
      id:
        type: integer
        format: int64
      active:
        type: boolean
        default: false
      defaultUser:
        type: boolean
        default: false
  GussPortalUser:
    type: object
    properties:
      emailAddress:
        type: string
      screenName:
        type: string
      id:
        type: integer
        format: int64
      active:
        type: boolean
        default: false
      defaultUser:
        type: boolean
        default: false
  Person:
    type: object
    properties:
      id:
        type: integer
        format: int64
      lastName:
        type: string
      firstName:
        type: string
      location:
        type: string
      gender:
        type: string
  GussMember:
    type: object
    properties:
      userId: 
        type: string
      memberId:
        type: string
      dateOfBirth:
        type: string
      gender:
        type: string
        enum:
         - male
         - female
      retirementDate:
        type: string
      membershipStatus:
        type: string
        enum:
         - active
         - inactive
      basicSalary:
        type: number
      address:
        $ref: '#/definitions/Address'
  ContributionHistory:
    type: object
    properties:
      documentId:
        type: string
      contributionStartDate:
        type: string
      paymentDate:
        type: string
      fiscalMonthYear:
        type: string
  Address:
    type: object
    properties:
      street1:
        type: string
      street2:
        type: string
      street3:
        type: string
      zip:
        type: string
      pObox:
        type: string
      region:
        type: string
      country: 
        type: string
      primary:
        type: string
      mailing: 
        type: string
  BaseRequest:
    type: object
    properties:
      userId:
        type: string
      memberId:
        type: string
  BaseResponse:
    type: object
    properties:
      returnCode:
        description: ''
        type: integer
        format: int32
        default: 121
  MemberProfileResponse:
    type: object
    properties:
      baseResponse:
        $ref: '#/definitions/BaseResponse'
      gussMember:
        $ref: '#/definitions/GussMember'